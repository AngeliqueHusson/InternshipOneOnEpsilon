video link list there lot comment sort thing want use link list array factor what point read sort think well actual link list link list faster array go find faster let shoot array versu link list first question start remind differ link list array let start array probabl understand array way memori start first valu purpos demonstr go use structur contain ing multipl valu talk object ago structur saw object collect valu store integ array element zero got two got array element one got two like break got great element got two refer index start array size know big wan ted creat alloc memori thing store valu write one put reim go put one store put differ valu aswel need that array work one big block memori thing one link list work slightli differ start begin link list point noth add thing list memori go store two thing first thing well label thing insid pand q lot p weve got q also extra thing tell us next that empti put alloc space one structur one thing go store connect point first thing often call someth like see video see done want store next thing alloc anoth one store valu weve still got differ could anywher els memori connect next pointer point next thing known start point point first thing first thing second thing second thing would point third thing would point could comput memori end normal point known valu often refer red null often number zero walk find next point zero null know youv come end two differ way data best amount data got differ one say fix insid creat store mani thing know actual fill soon get eleven sinc final top array cant go past eleven see yeah go howev wan ted put someth els thing get rid thing updat point new thing make grow quit easili also realli clever add thing middl begin simpli go go today probabl go one actual faster well let think actual let defin simpl problem weve structur got two thing got integ cal led p integ cal led q save link list array let consid oper go go element array element link list sum valu p go add valu go add what array element p array p go effect go add well link list well go set first thing point p one there time valu p next one well add missil want uniqu thing go visit everi singl element either array everi singl element link list go visit everi singl element visit one element natur random access array mean fast there way make differ unless first element one ever access first element look speed fuel directli random element array win hand think work case go consid want access everi singl element someth go sum valu could thing repres ing say window screen want move around want redraw whatev someth everi singl wall sort set go go array valu link list go sum actual add element p part structur done written see poem less go element array list link list got structur contain integ p integ q array got structur contain integ p interest q array item differ link list one extra item next pointer next thing listen see hope well go fast possibl rest main routin alist array random number random part program see store alloc memori element link list set valu everyth els leav array paper run time go time long take run function add afford either list array work averag time take calcul one well print valu built clock function c accur accur enough want real meat bodi program function list start array one possibl said variabl zero that go ked anoth variabl go index array go equal zero first element get end number element say sum equal valu alreadi sum plu valu ice element array p element rememb said array p q want valu p space within structur array go add get togeth list version similar set someon say p equal null havent end list set p initi first thing link list point first thing sum equal sum plu p insid p p insid variabl asleep programm set p r pointer point next thing follow link next thing link list keep come end two program simpl get term implement ing link list array go run get valu output go run go run raspberri pi actual go run tari behind mean need high peak high tech piec equip need floppi disk transfer program top mac run go tari assur spot see gon na first got list first also go list valu let load floppi disk that use like back wait one crave ran awhil along simpl program link list memori differ element random number p valu one well let run word old hob bit comput game time word everi appl secret long lot oil dont know anoth time time howev long take alloc random number alloc memori clock speed actual take comput load code program floppi disk memori run gener data set need gon na sum everyth happen happen memori take process record slight kill hope get extra bit program go well let run get averag actual look valu come think safe assum averag go end clock tick say q wop take go look go differ clock perm use time thing cant compar valu directli could come read certainli see rel pattern call clock tick run link list version program clock let run array version program go exactli thing go alloc array everi time twenti five thousand element popul random valu written program actual pseudo random number sequenc sum go fill time long take well theyll see whether array actual faster link list whether link list b array look like littl pinni thing go faster yeah well havent processor theyr camera what actual happen alloc space link list alloc space element gym alloc space next element could differ way speed thing that classic way array alloc whole lot one go take one huge block memori time eight one worth memori alloc one go go fill valu set seem spin wheel go slightli faster would spin wheel fast learn read youv hear thing yeah give nice sort visual feedback run well plain white screen print everi hundr element ideal si updat thing print either dash line one two slash es make look like get round print littl effect see someth comput faster get valu work immedi thing see array take tick quad kick compar two array link list know right cant argu come comput angular call alway final averag come theyr roughli compar basic there much sort thing there someth q wop tick per second machin probabl notic percent that mean stop come that know what array slow wrinkli yep array ling get vendor video yeah video bring slash comput two way walk ray went array smaller could also start index es move back smaller index es thought tri way let anyon post comment say went let run way wrote version walk togeth well get exactli answer plu b equal b plu watch find line sure think would take exactli amount time updat go revers array ill wait go backward array thing thing link list well way weve design link list pointer next thing thing dont pointer back previou thing singli link list move forward along could design doubli link list backward forward pointer think star ted move backward that go exactli start begin there actual point exactli code differ offset memori take exactli amount time wait thing let run program mac see much faster let compil turn array thing make go fast poss comparison array test go compil speed test done go thing link test go say someth realli obviou honestli heck lot quick er machin get compil readi yeah much faster everyth transfer across rather tri get old c compil go also chanc produc better code take make benefit speed pile let run link list test done everyth notic took lot still roughli order still around rememb differ clock compar tick one differ get averag two hundr nine point five four act tari much chick like tick cant compar array test link list test tari faster array test roughli take ten percent faster noth realli could say look differ mac mac take forti three point four four clock tick that five time faster array tari link list faster revers array go that quick er that quick er origin array that quick er link list everyth good everyth forward much bit possibl that problem code someth alway go reveal someth year need delv bit see what realli go rememb wrote program c wrote high level languag got compil instruct machin execut what actual happen research show machin execut favor walk backward someth compar go upward run array backward program mac let compil one everyth hilt test well run speed test back well run one array much faster accord revers rate faster forward array would expect valu shown run revers away fifteen twenti directli right would like stick answer would like chang oh nervou excit actual tari faster link list array mac way go say go revers reckon firm suppos revers oh like indecis person go averag time forti seven point four six margin slow margin still order magnitud faster could raspberri piso well compil well array test compil notic compil test list version well revers test compil last repair let run get weve run array test get nine point seven five averag array run link list get one eight five eight point six one link list test run revers get five weve run test weve weve assum noth weve ran test get data see faster array liquid oper weve tri weve got pretti interest run tari link list faster array unless ran array backward case array faster link list array go forward well come back ran raspberri pi array twice fast link list babi rare backward array mac view rang height faster link list whichev way went what go well let ignor mac minut appl love bit let ignor mac though let look raspberri pi weve got tari raspberri pi well go array speed link weve got one hundr seventi nine one hundr sixti six clock tick cant compar clock tick differ theyr differ differ clock use compar rel thing machin raspberri pi kish what go well thing need rememb look machin code roughli length number oper tari instruct take slightli longer execut that get go need think back video differ raspberri pi c pu would much faster modern cach everi need fetch everi bit data need fetch fetch memori time speak believ someth go broadli speak cach half buffer want get detail see there cash think c pu tari everyth everyth c pu need fetch tari data array link list cours next pointer link list come memori take amount time get two weather fetch data fetch instruct raspberri pi howev still got main bodi c pu go execut thing memori well cach fact actual probabl two cach one data instruct want see activ loo ked previou video access via cach havent got get memori make differ sure thing still wake well tari theori basic memori memori much faster c pu that twice fast memori provid data exactli c pu need there real need cash move ahead raspberri pi make cours c pu much faster memori c pu ask someth wait let figur happen run program raspberri instruct first time cach instruct cach first time go loop instruct go use loop cach instruct cap get immedi data particularli array would also collaps bit link list dont get one two time ill get call cach line pickup go well get data alreadi need cach well data alreadi array right reason array run faster raspberri pi instruct come straight institut basic give us fast lane instruct get immedi there data need get main memori get cach well happen rout list program except one crucial differ link list poem make one memori access get data valu go sum make anoth memori access go cat main memori address next thing make memori request may get satisfi main memori array make one valu interest cach get sort fast pass instruct actual second memori access get next pointer array list program end work twice fast tari everyth come memori doesnt matter whether read instruct read bit data still go come memori time actual front valu alreadi precalcul memori mean actual faster mean talk perhap faster realli billion get slight speed benefit show case took version program tari ran tari router differ arist use falcon falcon slightli later version processor cach instruct data cach ran time came array clock tick much faster processor anyway link tick falcon youv got cach theyr like raspberri array version end traffic exactli program exactli machin code youv got cach array version end faster instruct profession sort fat pack cach rather go main memori time mean becom faster link list version tell thing havent tal ked yet revers array faster answer slightli differ instruct instruct six allow decrement test zero branch one instruct actual make code slightli compact run slightli faster small enough time mac significantli faster get sort five time faster well that use slightli differ compil use clang c compil mac rather two cheat squat youv got array axi es loop say rather loop around one array access loop around eight array access es one actual remov test loop make program much faster compil program run faster answer whether rais faster link list much depend c pu machin youv built actual execut code cant make c pu execut code realli need test see what happen even within architectur famili differ six falcon mean make base chariti ralli link list arent true falcon move complet differ architectur like raspberri pi chip get differ effect best thing face question question like sure come test collect real data abl see what go could array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list array v link list